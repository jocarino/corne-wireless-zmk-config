/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

// Home row mods macro
#define WHRML(k2,k3,k4) &ht LALT k2  &ht LGUI k3  &ht LCTRL k4
#define WHRMR(k1,k2,k3) &ht RCTRL k1  &ht RGUI k2  &ht RALT k3

#define BAS 0
#define RIG 1
#define LEF 2
#define TRI 3

/ {
    behaviors {
        ht: hold_tap {
            label = "hold_tap";
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <220>;
            quick-tap-ms = <150>;
            global-quick-tap;
            bindings = <&kp>, <&kp>;
        };
        gqt: global-quick-tap {
            compatible = "zmk,behavior-hold-tap";
            label = "GLOBAL_QUICK_TAP";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <200>;
            quick-tap-ms = <125>;
            global-quick-tap;
            bindings = <&kp>, <&kp>;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";
        tri_layer {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
// -----------------------------------------------------------------------------------------
// | X  |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | X   |
// | X  |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  BS | X   |
// | X  |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  ENT| X   |
//                    |SHIFT| LEF/DEL | ALT |   | TAB | RAS/SPC  | CTRL |
                bindings = <
   &trans &kp Q &kp W &kp E &kp R &kp T   &kp Y &kp U  &kp I     &kp O   &kp P    &trans
   &trans &kp A &kp S &kp D &kp F &kp G   &kp H &kp J  &kp K     &kp L   &kp ENTER &trans
   &trans &kp Z &kp X &kp C &kp V &kp B   &kp N &kp M  &kp COMMA &kp DOT &kp BACKSPACE &trans
                  &kp LSHIFT &gqt LEF DEL &kp ALT   &kp TAB &lt RIG SPACE &kp LCTRL
                >;
            };

        right_layer {
// -----------------------------------------------------------------------------------------
// | X  | BT1 |  1  |  2  |  3  |P_UP |   | BT1 | BT2 | BT3 |BT_CLR|     |  X  |
// | X  | BT2 |  4  |  5  |  6  |P_DWN|   | LFT | DWN |  UP | RGT  |     |  X  |
// | X  | BT3 |  7  |  8  |  9  |HOME |   | END |     |     |      |     |  X  |
//                    |SHIFT|  X   | 0   |   | ENT |  X  | ALT |
                bindings = <
   &trans &bt BT_SEL 1 &kp N1   &kp N2       &kp N3       &kp PG_UP   &trans   &trans    &kp UP   &bt BT_CLR  &kp N0 &trans
   &trans &bt BT_SEL 2 &kp N4   &kp N5       &kp N6       &kp PG_DN   &trans   &kp LEFT &kp DOWN  &kp RIGHT   &trans &trans
   &trans &bt BT_SEL 3 &kp N7   &kp N8       &kp N9       &kp HOME    &kp END  &trans   &trans &trans         &trans &trans
                  &kp LSHFT &trans &kp ALT   &kp TAB &trans &kp LCTRL
            >;
        };

        left_layer {
// -----------------------------------------------------------------------------------------
// | X  |  !  |  "  |  £  |  $  |  %  |   |  ^  |  &  |  *  |  -  |  _  | X |
// | X  |  `  |  @  |  '  |  #  |     |   |  LP  |  RP  |  LSP  |  RSP  |  :  | X |
// | X  | "|" |  \  |     |     |     |   |  +  |  =  |  LCP  |  RCP  |  /  | X |
//                    |SHIFT|  X  | SPC |   | ENT |  X  | ALT |
            bindings = <
   &trans  &kp EXCL &kp AT &kp HASH &kp DLLR &kp PRCNT   &kp CARET &kp AMPS  &kp KP_MULTIPLY &kp LPAR &kp RPAR &kp BSPC
   &trans  &trans   &trans &trans   &trans   &trans      &kp MINUS &kp EQUAL &kp LBKT        &kp RBKT &kp BSLH &kp GRAVE
   &trans  &trans   &trans &trans   &trans   &trans      &kp UNDER &kp PLUS  &kp LBRC        &kp RBRC &kp PIPE &kp TILDE
                  &kp LSHFT &trans &kp ALT   &kp TAB &trans &kp LCTRL
            >;
        };

        tri_layer {
// -----------------------------------------------------------------------------------------
// | X  | F1 │ F2  │ F3    │  F4   |  X |   | X  |  PREVSONG   |  PAUSE   | NEXTSONG   | X   |  X |
// | X  | F5 │ F6  │ F7    │  F8   |  X |   | X  |  VOL UP  |  VOL MUTE  |  VOL DOWN   |  X  |  X |
// | X  | F9 │ F10  │ F11  │  F12  |  X |   | X  | X           | X         | X         | X   | X  |
//                    |SHIFT|  X  | SPC  |   | ENT |  X  | ALT |
                bindings = <
 &trans  &kp F1   &kp F2   &kp F3   &kp F4     &trans     &trans  &kp C_PREV    &kp C_PP    &kp C_NEXT    &trans  &trans
 &trans  &kp F5   &kp F6   &kp F7   &kp F8     &trans     &trans  &kp C_VOL_UP  &kp C_MUTE  &kp C_VOL_DN  &trans  &trans
 &trans  &kp F9   &kp F10  &kp F11  &kp F12    &trans     &trans  &trans        &trans      &trans        &trans  &trans
                  &trans &trans &trans   &trans &trans &trans
            >;
        };
    };
};